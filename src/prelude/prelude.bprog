sum { 0 foldl + } fun

toList { [ ] swap times cons } fun
gen1toNum { max swap := 1 loop { dup max > } { dup 1 + } } fun
odd { dup 2 div swap 2 / == if False True } fun
even { dup 2 div swap 2 / == } fun

fact { toList 1 foldl * } fun
